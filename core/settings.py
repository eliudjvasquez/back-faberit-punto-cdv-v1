'''
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
'''

from pathlib import Path
import os
import environ

env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = env('IBMSE_SECRET_KEY')

GRAPPELLI_ADMIN_TITLE = 'Panel de Administración de Mi Proyecto'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('IBMSE_DEBUG') in ['True', 'true', '1']

ALLOWED_HOSTS = env('IBMSE_ALLOWED_HOSTS').split(',')

AUTH_USER_MODEL = 'initial.User'

DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600 
FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880 

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'import_export',
    'drf_spectacular',
    'initial',
    'enticen',
    'segcen',
    'puntocdv'
]

SITE_ID = 1

MIDDLEWARE = [
    'core.middleware.empty_to_null.EmptyToNullMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
BD_HOST_IBISE = None if 'IBMSE_DB_HOST' not in env else env('IBMSE_DB_HOST')
BD_NAME_IBISE = None if 'IBMSE_DB_NAME' not in env else env('IBMSE_DB_NAME')
BD_USER_IBISE = None if 'IBMSE_DB_USER' not in env else env('IBMSE_DB_USER')
BD_PASS_IBISE = None if 'IBMSE_DB_PASSWORD' not in env else env('IBMSE_DB_PASSWORD')
BD_PORT_IBISE = None if 'IBMSE_DB_PORT' not in env else env('IBMSE_DB_PORT')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': BD_HOST_IBISE,
        'NAME': BD_NAME_IBISE,
        'USER': BD_USER_IBISE,
        'PASSWORD': BD_PASS_IBISE,
        'PORT': BD_PORT_IBISE
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Lima'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
PROJECT_APP_PATH = os.path.dirname(os.path.abspath(__file__))
PROJECT_APP = os.path.basename(PROJECT_APP_PATH)
PROJECT_ROOT = BASE_DIR = os.path.dirname(PROJECT_APP_PATH)

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/upload/'
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'upload')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
REST_USE_JWT = True

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        'core_permission.permissions.other_permissions.BaseSuperuserPermissions'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication'
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema'
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'API Punto CDV',
    'DESCRIPTION': 'Documentación de la API del proyecto Punto CDV de FaberIT.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

CONS = {
    'GROUPS': {
        'SUPERADMIN': 'Superadmin',
        'ADMINISTRATOR': 'Administrador',
        'PROMOTOR': 'Promotor'
    },
    'MONGO': {
        'SOL_PERSONAS': 'registration_people'
    }
}

IBMSE_APP_URL = None if 'IBMSE_APP_URL' not in env else env('IBMSE_APP_URL')

# Credenciales para envio de correos
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.brevo.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = env('SMTP_BREVO_USER')
EMAIL_HOST_PASSWORD = env('SMTP_BREVO_PASSWORD')
DEFAULT_FROM_EMAIL = env('SMTP_BREVO_FROM')

BREVO_API_KEY = env('BREVO_API_KEY')
# Configuración adicional para Zoho
EMAIL_CONFIGS = {
    'zoho': {
        'EMAIL_HOST': 'smtp.zoho.com',
        'EMAIL_PORT': 587,
        'EMAIL_USE_TLS': True,
        'EMAIL_HOST_USER': env('SMTP_ZOHO_USER'),
        'EMAIL_HOST_PASSWORD': env('SMTP_ZOHO_PASSWORD'),
        'DEFAULT_FROM_EMAIL': env('SMTP_ZOHO_FROM')
    },
    'brevo': {
        'EMAIL_HOST': 'smtp-relay.brevo.com',
        'EMAIL_PORT': 587,
        'EMAIL_HOST_USER': env('SMTP_BREVO_USER'),
        'EMAIL_HOST_PASSWORD': env('SMTP_BREVO_PASSWORD'),
        'DEFAULT_FROM_EMAIL': env('SMTP_BREVO_FROM')
    }
}


DATE_INPUT_FORMATS = ['%d-%m-%Y']

API_FAB_SHARED_TOKEN = env('API_FAB_SHARED_TOKEN')
API_FAB_SHARED_DNI = env('API_FAB_SHARED_DNI')
API_FAB_SHARED_RUC = env('API_FAB_SHARED_RUC')

FERNET_KEY=env('FERNET_KEY').encode()

CELERY_BROKER_URL = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_RESULT_BACKEND = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'puntocdv.log'),  # <- Promtail lo leerá
            'formatter': 'verbose',
        },
    },
    'formatters': {
        'verbose': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
    },
    'loggers': {
        '': {  # logger raíz
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}